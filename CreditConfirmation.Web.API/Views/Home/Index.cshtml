@{
    ViewData["Title"] = "Credit Confirmation System";
}
@model CreditConfirmation.Web.API.Models.CustomerModel

<div class="row">
    <div class="col-md-32">
        <h2>Please Fill The Required Fields to Apply Credit</h2>
    </div>
    <form method="post" action="/Home/Index">
        <div class="row">
            <div class="col-md-3">
                <label for="identityNumber">TC Identity Number: </label>
            </div>
            <div class="col-md-3">
                <input type="number" id="identityNumber" placeholder="TC Identity Number" name="IdentityNumber" required />
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <label for="firstName">FirstName: </label>
            </div>
            <div class="col-md-3">
                <input type="text" id="firstName" placeholder="First Name" name="FirstName" required />
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <label for="lastName">LastName: </label>
            </div>
            <div class="col-md-3">
                <input type="text" id="lastName" placeholder="Last Name" name="LastName" required />
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <label for="phoneNumber">Phone: </label>
            </div>
            <div class="col-md-3">
                <input type="tel" id="phoneNumber" placeholder="(___) ___ - ____" maxlength="16" name="PhoneNumber" required />
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <label for="email">Email: </label>
            </div>
            <div class="col-md-3">
                <input type="email" id="email" placeholder="example@mail.com" name="Email" required />
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <label for="income">Income (TL): </label>
            </div>
            <div class="col-md-3">
                <input type="number" min="0.01" step="0.01" id="income" placeholder="Income" name="Income" required />
            </div>
        </div>
        <div class="row"></div>
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-3">
                <input type="submit" style="height:35px !important; margin-left:auto" />
            </div>
        </div>

    </form>
</div>
<div class="row">
    <div class="col-md-32">
        <h3>@ViewData["Message"]</h3>
    </div>
    <div class="col-md-32">
        <h5>@ViewData["Confirmed"]</h5>
        <h5>@ViewData["Limit"]</h5>
    </div>
</div>

<script>
    const isNumericInput = (event) => {
        const key = event.keyCode;
        return ((key >= 48 && key <= 57) || // Allow number line
            (key >= 96 && key <= 105) // Allow number pad
        );
    };

    const isModifierKey = (event) => {
        const key = event.keyCode;
        return (event.shiftKey === true || key === 35 || key === 36) || // Allow Shift, Home, End
            (key === 8 || key === 9 || key === 13 || key === 46) || // Allow Backspace, Tab, Enter, Delete
            (key > 36 && key < 41) || // Allow left, up, right, down
            (
                // Allow Ctrl/Command + A,C,V,X,Z
                (event.ctrlKey === true || event.metaKey === true) &&
                (key === 65 || key === 67 || key === 86 || key === 88 || key === 90)
            )
    };

    const enforceFormat = (event) => {
        // Input must be of a valid number format or a modifier key, and not longer than ten digits
        if (!isNumericInput(event) && !isModifierKey(event)) {
            event.preventDefault();
        }
    };

    const formatToPhone = (event) => {
        if (isModifierKey(event)) { return; }

        // I am lazy and don't like to type things more than once
        const target = event.target;
        const input = target.value.replace(/\D/g, '').substring(0, 10); // First ten digits of input only
        const zip = input.substring(0, 3);
        const middle = input.substring(3, 6);
        const last = input.substring(6, 10);

        if (input.length > 6) { target.value = `(${zip}) ${middle} - ${last}`; }
        else if (input.length > 3) { target.value = `(${zip}) ${middle}`; }
        else if (input.length > 0) { target.value = `(${zip}`; }
    };

    const inputElement = document.getElementById('phoneNumber');
    inputElement.addEventListener('keydown', enforceFormat);
    inputElement.addEventListener('keyup', formatToPhone);
</script>
